Matching questions with at least 0.7 in common.

Question 8 on Free Response on cmps112-2017q4-midterm.tt with accuracy 0.75: 
   Ocaml.  Write a function to reverse a list.  [2pt]



Question 10 on Multiple Choice part 1 on cmps112-2017q4-midterm.tt with accuracy 0.9285714285714286: 
    Type of (+)?
    (A) int * int * int
    (B) int * int -> int
    (C) int -> int * int
    (D) int -> int -> int



Question 12 on Multiple Choice part 1 on cmps112-2017q4-midterm.tt with accuracy 0.7272727272727273: 
    In the expression $ ( \lambda x . ( + x ) y ) $
    (A) $x$ is bound and $y$ is bound.
    (B) $x$ is bound and $y$ is free.
    (C) $x$ is free and $y$ is bound.
    (D) $x$ is free and $y$ is free.

+---------------------------------+
|                                 |
|                                 |
|                                 |
|                                 |
|                                 |
|                                 |
|                                 |
|jpgs/math-but-yesterday-you-said.ps
|                                 |
|                                 |
|                                 |
|                                 |
|                                 |
|                                 |
|                                 |
+---------------------------------+




Question 3 on Free Response on cmps112-2018q1-midterm.tt with accuracy 0.7073170731707317: 
   Without using any higher-order functions, code the function fold_
   left, which will take a function, a unit, and a list, and fold the
   list.

   (a) Scheme.  [2pt]
      > (fold_left + 0 '(1 2 3))
      6

   (b) Ocaml.  [2pt]
      # fold_left;;
      - : ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a = <fun>
      # fold_left (+) 0 [1;2;3];;
      - : int = 6



Question 7 on Free Response on cmps112-2018q1-midterm.tt with accuracy 0.7222222222222222: 
   Ocaml.  Define sub' according to the programming project.  It takes
   two int lists representing multiprecise numbers and subtracts the
   second from the first.  Assume the first number is not less than
   the second number.  [5pt]
   # sub';;
   - : int list -> int list -> int list = <fun>
   # sub' [1;2;3;4] [4;3;2;1];;
   - : int list = [7; 8; 0; 3]
   # sub' [0;0;0;9] [2];;
   - : int list = [8; 9; 9; 8]
   # sub' [3;3;3] [3;3;3];;
   - : int list = []




Question 3 on Multiple Choice part 2 on cmps112-2018q1-midterm.tt with accuracy 0.9230769230769231: 
    Output of:
    # (-);;
    (A) - : int * int * int = <fun>
    (B) - : int * int -> int = <fun>
    (C) - : int -> int * int = <fun>
    (D) - : int -> int -> int = <fun>



Question 9 on Multiple Choice part 2 on cmps112-2018q1-midterm.tt with accuracy 0.8: 
    What are the operator precedences is Smalltalk, with the highest
    at the left and lowest at the right?
    (A) binary, keyword, unary
    (B) keyword, binary, unary
    (C) keyword, unary, binary
    (D) unary, binary, keyword



Question 11 on Multiple Choice part 2 on cmps112-2018q1-midterm.tt with accuracy 0.7777777777777778: 
    What produces x itself as a result of this expression, assuming x
    is a list of at least one element?
    (A) (cons (car x) (cdr x))
    (B) (cons (cdr x) (car x))
    (C) (list (car x) (cdr x))
    (D) (list (cdr x) (car x))



Question 6 on Free Response on cmps112-2018q2-midterm.tt with accuracy 0.75: 
   Name two kinds of universal polymorphism and give an example of
   each.  [2pt]



Question 7 on Free Response on cmps112-2018q2-midterm.tt with accuracy 0.7692307692307693: 
   Name two kinds of ad hoc polymorphism and give an example of each.
   [2pt]



Question 8 on Free Response on cmps112-2018q2-midterm.tt with accuracy 0.723404255319149: 
   Ocaml.  Define max consistent with the examples shown here.  [2pt]
   # max;;
   - : ('a -> 'a -> bool) -> 'a list -> 'a option = <fun>
   # max (>);;
   - : '_a list -> '_a option = <fun>
   # max (>) [];;
   - : 'a option = None
   # max (>) [3];;
   - : int option = Some 3
   # max (>) [3;1;4;1;5;9;2;6];;
   - : int option = Some 9
   # max (<) [3;1;4;1;5;9;2;6];;
   - : int option = Some 1
   # max (>) ["foo";"bar";"baz"];;
   - : string option = Some "foo"
   # max (<) [sqrt 2.;exp 1.];;
   - : float option = Some 1.41421356237309515



Question 9 on Free Response on cmps112-2018q2-midterm.tt with accuracy 0.746031746031746: 
   Define the function zipwith that takes a function and two lists and
   uses that function to join the lists into a single result list.  If
   the lists are of different length, use failwith to raise an excep-
   tion.  Do not use the length function.  [2pt]
   # zipwith;;
   - : ('a -> 'b -> 'c) -> 'a list -> 'b list -> 'c list = <fun>
   # zipwith (+) [1;2;3] [4;5;6];;
   - : int list = [5; 7; 9]
   # zipwith (/.) [1.;2.;3.] [4.;5.;6.];;
   - : float list = [0.25; 0.4; 0.5]
   # zipwith (+) [1;3;5] [4];;
   Exception: Failure "zipwith".



Question 11 on Free Response on cmps112-2018q2-midterm.tt with accuracy 0.7608695652173914: 
    Define the function sum which returns the sum of a list of inte-
   gers.  Use a higher-order function.
    (a) Scheme.  [1pt]
        > foldl
        #<procedure:foldl>
        (define (sum list) ___________________________________ )
        > (sum '(1 2 3))
        6
    (b) Ocaml.  [1pt]
        # let sum = List.fold_left ___________________________________
        ;;
        # List.fold_left;;
        - : ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a = <fun>
        val sum : int list -> int = <fun>
        # sum [1;2;3];;
        - : int = 6



Question 1 on Multiple Choice part 1 on cmps112-2018q2-midterm.tt with accuracy 0.7358490566037735: 
    With respect to Java, the term ``overloading'' refers to:
    (A) Automatic type conversion when the argument does not match the
        declared type of the parameter.
    (B) Generic classes with type parameterization.
    (C) Multiple functions with the same name and different
        signatures, defined in the same class.
    (D) Multiple functions with the same name and signature, defined
        in a base class and also in its derived classes.



Question 4 on Multiple Choice part 1 on cmps112-2018q2-midterm.tt with accuracy 0.9444444444444444: 
    What is the type of List.map((+)3)?
    (A) (int -> int) -> int list -> int list
    (B) int list -> (int -> int) list
    (C) int list -> int list
    (D) int list



Question 6 on Multiple Choice part 1 on cmps112-2018q2-midterm.tt with accuracy 0.9090909090909091: 
    What is the type of (>)?
    (A) 'a * 'a -> bool
    (B) 'a -> 'a -> bool
    (C) bool -> 'a -> 'a
    (D) int -> int -> bool



Question 9 on Multiple Choice part 1 on cmps112-2018q2-midterm.tt with accuracy 0.7391304347826086: 
    In the \lambda-calculus expression $ ( lambda x . ~ + ~ x ~ y ) $:
    (A) $x$ is bound and $y$ is bound.
    (B) $x$ is bound and $y$ is free.
    (C) $x$ is free and $y$ is bound.
    (D) $x$ is free and $y$ is free.



Question 10 on Multiple Choice part 1 on cmps112-2018q2-midterm.tt with accuracy 0.8823529411764706: 
    What is tye type of (-)?
    (A) int * int * int
    (B) int * int -> int
    (C) int -> int * int
    (D) int -> int -> int



Question 11 on Multiple Choice part 1 on cmps112-2018q2-midterm.tt with accuracy 0.9166666666666666: 
    What is the type of List.map?
    (A) ('a -> 'b) -> 'a list -> 'b list
    (B) ('a * 'b) * 'a list * 'b list
    (C) 'a list -> 'b list -> ('a -> 'b)
    (D) ('a list -> 'b list) -> 'a -> 'b



Question 10 on Free Response on cmps112-2018q4-midterm.tt with accuracy 0.7241379310344828: 
    Ocaml.  Fill in the column at the right with the response given by
   the interactive toploop when the entry at the left is given.  [2pt]

   +----------------------------------+----------------------------------------+
   |List.map;;                        |                                        |
   |                                  |                                        |
   +----------------------------------+----------------------------------------+
   |(+) 1;;                           |                                        |
   |                                  |                                        |
   +----------------------------------+----------------------------------------+
   |1::2::3::[];;                     |                                        |
   |                                  |                                        |
   +----------------------------------+----------------------------------------+
   |let car = function x::_ -> x      |                                        |
   |          | _ -> failwith "car";; |                                        |
   +----------------------------------+----------------------------------------+



Question 1 on Multiple Choice part 1 on cmps112-2018q4-midterm.tt with accuracy 0.75: 
    Unix.  What is the symbolic name for a user's home directory?
    (A) $
    (B) .
    (C) /
    (D) ~



Question 5 on Multiple Choice part 1 on cmps112-2018q4-midterm.tt with accuracy 0.75: 
    Unix.  Which environment variable must be adjusted in order to
    find the location of programs that are not in the standard
    directories?
    (A) $HOME
    (B) $PATH
    (C) $TERM
    (D) $USER



Question 6 on Multiple Choice part 1 on cmps112-2018q4-midterm.tt with accuracy 0.7241379310344828: 
    Which of the following will not be written using tail recursion?
    (A) Computing a Fibonacci number.
    (B) Finding the sum of all elements in a list.
    (C) Mapping a unary function onto a list.
    (D) Reversing a list.



Question 10 on Multiple Choice part 1 on cmps112-2018q4-midterm.tt with accuracy 0.75: 
    Smalltalk.  What is 1.4142135623730951 ?
    (A) (sqrt 2.0)
    (B) 2.0 ** 0.5
    (C) 2.0 sqrt
    (D) sqrt 2.0



Question 11 on Multiple Choice part 1 on cmps112-2018q4-midterm.tt with accuracy 0.9411764705882353: 
    Ocaml.  What is the type of (+)?
    (A) int * int * int
    (B) int * int -> int
    (C) int -> int * int
    (D) int -> int -> int



Question 6 on Free Response on cmps112-2019q1-midterm.tt with accuracy 0.7058823529411765: 
   Define the function sum making use of fold_left.  The function
   should satisfy the same requirements as the previous sum question,
   and use the fold_left function defined above.

    (a) Ocaml.  Fill in the space.  Do not alter anything to the left
        of the equal (=) symbol.  [1pt]

        # let sum = ________________________________________;;
        val sum : float list -> float = <fun>

    (b) Scheme.  [1pt]



Question 4 on Multiple Choice part 1 on cmps112-2019q1-midterm.tt with accuracy 0.9411764705882353: 
    Ocaml.  What is the type of (+)?
    (A) int * int * int
    (B) int * int -> int
    (C) int -> int * int
    (D) int -> int -> int



Question 5 on Multiple Choice part 1 on cmps112-2019q1-midterm.tt with accuracy 0.7586206896551724: 
    What takes a function and a list, applies that function to every
    element of the list, and returns a resulting list of the same
    length as the argument list?
    (A) apply
    (B) fold_left
    (C) filter
    (D) map



Question 6 on Multiple Choice part 1 on cmps112-2019q1-midterm.tt with accuracy 0.8333333333333334: 
    Assuming x is a proper list, what will return a list equivalent to
    x?
    (A) (car (cdr x) (cons x))
    (B) (car (cons x) (cdr x))
    (C) (cdr (car x) (cons x))
    (D) (cdr (cons x) (car x))
    (E) (cons (car x) (cdr x))
    (F) (cons (cdr x) (car x))



Question 1 on Free Response on cse112-2020q1-midterm.tt with accuracy 0.7948717948717948: 
   Define the function sum which will find the sum of all numbers in
    a list.  Use as little function call stack space as possible.  Do
    not use a higher order function.

     (a) Scheme.  [2pt]

     (b) OCaml.  [2pt]
         # sum;;
         - : int list -> int = <fun>



Question 2 on Free Response on cse112-2020q1-midterm.tt with accuracy 0.75: 
   Define the fold left function.  Use as little function call stack
    space as possible.

     (a) Scheme.  The order of arguments are the same as in OCaml.
         [2pt]
         > foldl
         #<procedure:foldl>

     (b) OCaml.  [2pt]
         # List.fold_left;;
         - : ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a = <fun>



Question 4 on Free Response on cse112-2020q1-midterm.tt with accuracy 0.782608695652174: 
   Scheme.  Define the function evalexpr which takes as an argument
    either a number or an expression.  A number is always returned as
    real.  An expression is a list of length 3, where the car is a
    binary function, and the cdr is a list of two expressions.  See
    the Scheme interaction at the left.  Note that there is no hash
    table for functions.  The actual function's value is in the list
    in the function position.  Note the quasiquote and unquote.  [2pt]

    +--------------------------------------------+
    |> (evalexpr `(,+ (,* 2 3) (,* 4 5)))        |
    |26.0                                        |
    |> (evalexpr 3)                              |
    |3.0                                         |
    |> (evalexpr `(,* (,+ 8 3) (,+ (,* 2 9) 6))) |
    |264.0                                       |
    +--------------------------------------------+



Question 2 on Multiple Choice part 1 on cse112-2020q1-midterm.tt with accuracy 0.8: 
    OCaml.  Fill in the blank.
   # ____ ((+)1) [1;2;3];;
   - : int list = [2; 3; 4]
   (A) List.fold_left
   (B) List.fold_right
   (C) List.map
   (D) List.tl



Question 8 on Multiple Choice part 1 on cse112-2020q1-midterm.tt with accuracy 0.9411764705882353: 
    OCaml.  What is the type of ( * )?
   (A) int * int -> int
   (B) int * int <- int
   (C) int -> int -> int
   (D) int <- int <- int



Question 11 on Multiple Choice part 1 on cse112-2020q1-midterm.tt with accuracy 0.7058823529411765: 
    OCaml.  How much function call stack space is occupied by the
   following function?
   let f n = if n <= 1 then n
             else f (n - 1) + f (n - 2);;
   (A) $ O ( 1 ) $
   (B) $ O ( n ) $
   (C) $ O ( n sup 2 ) $
   (D) $ O ( 2 sup n ) $



Question 6 on Free Response on cmps112-2017q4-final.tt with accuracy 0.7142857142857143: 
   Smalltalk.  Define a class Max which has a keyword class method max
   whose argument is an array.  It returns the maximum value in the
   array.  If the array is empty, it returns nil.  [4pt]
   st> Max max: #(3.14159265358979 1.4142135623730951


Question 1 on Multiple Choice part 1 on cmps112-2017q4-final.tt with accuracy 0.9583333333333334: 
    What is the type of f:
    let f (x, y) = x + y;;
    (A) f : int * int * int
    (B) f : int * int -> int
    (C) f : int -> int * int
    (D) f : int -> int -> int



Question 2 on Multiple Choice part 1 on cmps112-2017q4-final.tt with accuracy 0.8846153846153846: 
    What is the type of g:
    let g x y = x * y;;
    (A) f : int * int * int
    (B) f : int * int -> int
    (C) f : int -> int * int
    (D) f : int -> int -> int



Question 10 on Multiple Choice part 1 on cmps112-2017q4-final.tt with accuracy 0.8333333333333334: 
    What has type int list in Ocaml?
    (A) (1,2,3,4);;
    (B) (1;2;3;4);;
    (C) [1,2,3,4];;
    (D) [1;2;3;4];;



Question 1 on Multiple Choice part 2 on cmps112-2017q4-final.tt with accuracy 0.7692307692307693: 
    What will unexpectly start a comment?
    (A) let f = (*);;
    (B) let f = (+);;
    (C) let f = (-);;
    (D) let f = (/);;



Question 9 on Multiple Choice part 2 on cmps112-2017q4-final.tt with accuracy 0.8333333333333334: 
    Given the following Smalltalk definition, what returns 4?
    a := [:x| x + 1].
    (A) a 3.
    (B) a at: 3.
    (C) a value: 3.
    (D) a x: 3.



Question 11 on Multiple Choice part 2 on cmps112-2017q4-final.tt with accuracy 0.75: 
    Which C++ operator is not lazy?
    (A) &&
    (B) <<
    (C) ? :
    (D) ||



Question 10 on Free Response on cmps112-2018q1-final.tt with accuracy 0.7358490566037735: 
    Prolog.  Given the facts listed here, write a relation chow_time
   with a single list argument, and which will succeed if anything in
   the list will get eaten.  Hint:  The function member(X,Y) checks to
   see if the item X is a member of the list Y.  Write the relation
   chow_time, which has a list argument and succeeds [2pt]
   eats(fox,chicken).
   eats(chicken,grain).



Question 3 on Multiple Choice part 1 on cmps112-2018q1-final.tt with accuracy 1.0: 
    # sqrt;;
    (A) - : float * float = <fun>
    (B) - : float -> float = <fun>
    (C) - : int * int = <fun>
    (D) - : int -> int = <fun>



Question 5 on Multiple Choice part 1 on cmps112-2018q1-final.tt with accuracy 1.0: 
    # (<) 2;;
    (A) - : 'a -> bool = <fun>
    (B) - : bool -> 'a = <fun>
    (C) - : bool -> int = <fun>
    (D) - : int -> bool = <fun>



Question 8 on Multiple Choice part 1 on cmps112-2018q1-final.tt with accuracy 0.8333333333333334: 
    Java has [x] inheritance of classes and [y] inheritance of
    interfaces.
    (A) [x] = multiple, [y] = multiple
    (B) [x] = multiple, [y] = single
    (C) [x] = single, [y] = multiple
    (D) [x] = single, [y] = single



Question 4 on Multiple Choice part 2 on cmps112-2018q1-final.tt with accuracy 0.7037037037037037: 
    Which function takes a function $f$ and a list, applies $f$ to
    every element of the list, and returns a new list of the same
    length whose values are $f(x)$?
    (A) filter
    (B) fold_left
    (C) fold_right
    (D) map



Question 7 on Free Response on cmps112-2018q2-final.tt with accuracy 0.7217391304347827: 
   Prolog.

    (a) Write a set of facts called arrow which describe this graph,
        where arrow(a,b) means that a->b.  [2pt]

.PS 1i
arrowht = circlerad
arrowwid = circlerad/2
A: circle "a"
B: circle "b" at A+(5*circlerad,0)
arrow from A to B chop
C: circle "c" at A+(0,-5*circlerad)
arrow from B to C chop
arrow from A to C chop
D: circle "d" at B+(5*circlerad,0)
arrow from B to D chop
E: circle "e" at D+(0,-5*circlerad)
arrow from D to E chop
arrow from E to C chop
.PE

    (b) Given ispath as defined here, write the relation ispath(A,Vis-
        ited,B) which succeeds if there is a path from A to B and
        avoids infinite traversals around a loop.  Use Visited to keep
        track of the nodes visited.  [2pt]
        Assume these relations:
           not(X) :- X,!,fail.
           not(_).
           ispath(A,A).
           ispath(A,B) :- ispath(A,[],B).
        Results:
        | ?- ispath(a,e).   yes
        | ?- ispath(c,e).   no
        | ?- ispath(a,c).   yes
        | ?- ispath(d,c).   yes



Question 5 on Multiple Choice part 1 on cmps112-2018q2-final.tt with accuracy 0.7692307692307693: 
    Type of [(1,"a");(2,"b");(3,"c")]
    (A) (int * int * int) list
        * (string * string * string) list
    (B) (int * string) list list
    (C) (int * string) list
    (D) int list * string list



Question 6 on Multiple Choice part 1 on cmps112-2018q2-final.tt with accuracy 0.7857142857142857: 
    What will cause a list with no elements to be passed to the
    function f?
    (A) (f '())
    (B) (f ())
    (C) (f null)
    (D) (f null?)



Question 8 on Multiple Choice part 1 on cmps112-2018q2-final.tt with accuracy 0.9285714285714286: 
    Ocaml.  Type of (+)
    (A) int * int * int
    (B) int * int -> int
    (C) int -> int * int
    (D) int -> int -> int



Question 9 on Multiple Choice part 1 on cmps112-2018q2-final.tt with accuracy 0.7083333333333334: 
    If guess will search a database for a possible answer and verify
    checks to see if it is acceptable, how would this be coded in
    Prolog?
    (A) find(X) :- guess(X), verify(X).
    (B) find(X) :- guess(X).
        find(X) :- verify(X).
    (C) find(X) :- verify(X), guess(X).
    (D) verify(X) :- find(X), guess(X).



Question 5 on Multiple Choice part 2 on cmps112-2018q2-final.tt with accuracy 0.7272727272727273: 
    Given this Smalltalk definition, what returns 4?  a := [:x| x +
    1].
    (A) 3 a.
    (B) a 3.
    (C) a at: 3.
    (D) a value: 3.



Question 9 on Multiple Choice part 2 on cmps112-2018q2-final.tt with accuracy 0.8: 
    Ocaml.  let f x = x /. 2.;;
    (A) val f : float -> float = <fun>
    (B) val f : float -> int = <fun>
    (C) val f : int -> float = <fun>
    (D) val f : int -> int = <fun>



Question 5 on Multiple Choice part 1 on cmps112-2018q4-final.tt with accuracy 0.9565217391304348: 
    What is the type of f in the declaration:
    let f (x, y) = x +. y;;
    (A) float * float -> float
    (B) float -> float -> float
    (C) int * int -> int
    (D) int -> int -> int



Question 7 on Multiple Choice part 1 on cmps112-2018q4-final.tt with accuracy 0.7894736842105263: 
    Smalltalk.  Operator precedence with the highest at the left and
    lowest at the right is:
    (A) binary, keyword, unary
    (B) binary, unary, keyword
    (C) keyword, binary, unary
    (D) keyword, unary, binary
    (E) unary, binary, keyword
    (F) unary, keyword, binary



Question 2 on Multiple Choice part 2 on cmps112-2018q4-final.tt with accuracy 0.75: 
    What regular expression will match one or more white-space
    characters?
    (A) \S+
    (B) \W+
    (C) \s+
    (D) \w+



Question 3 on Multiple Choice part 2 on cmps112-2018q4-final.tt with accuracy 0.7777777777777778: 
    What is the first line of a Perl script?
    (A) !#/usr/bin/perl
    (B) #!/bin/bash perl
    (C) #!/usr/bin/perl
    (D) #!\usr\bin\perl



Question 4 on Multiple Choice part 2 on cmps112-2018q4-final.tt with accuracy 0.9230769230769231: 
    Perl.  Which expression will find the value associated with the
    key $i$ in the hash $a$?
    (A) $a($i)
    (B) $a<$i>
    (C) $a[$i]
    (D) $a{$i}



Question 6 on Multiple Choice part 2 on cmps112-2018q4-final.tt with accuracy 0.8333333333333334: 
    Perl.  Which of the following is an array?
    (A) $a
    (B) %a
    (C) *a
    (D) @a



Question 8 on Multiple Choice part 2 on cmps112-2018q4-final.tt with accuracy 0.8888888888888888: 
    What will redirect both the stdout and stderr of program foo into
    the file bar?
    (A) foo 1>&2 >bar
    (B) foo 2>&1 >bar
    (C) foo >bar 1>&2
    (D) foo >bar 2>&1



Question 10 on Multiple Choice part 2 on cmps112-2018q4-final.tt with accuracy 0.7073170731707317: 
    Perl.  What will read the next line from the standard input if no
    files are specified in @ARGV, but if files are specified in @ARGV,
    will read the next line from the current file, sequencing through
    these files in the order given?
    (A) while ($line = <*>)
    (B) while ($line = <>)
    (C) while ($line = <@ARGV>)
    (D) while ($line = <STDIN>)



Question 11 on Multiple Choice part 2 on cmps112-2018q4-final.tt with accuracy 1.0: 
    Ocaml.  # (=);;
    (A) - : 'a * 'a -> bool = <fun>
    (B) - : 'a -> 'a -> bool = <fun>
    (C) - : int * int -> bool = <fun>
    (D) - : int -> int -> bool = <fun>



Question 12 on Multiple Choice part 2 on cmps112-2018q4-final.tt with accuracy 0.8125: 
    Templates in C++ and generics in Java are an example of __
    polymorphism.
    (A) ad-hoc parametric
    (B) universal ad-hoc
    (C) universal conversion
    (D) universal parametric




Question 1 on Free Response on cmps112-2019q1-final.tt with accuracy 0.896551724137931: 
   Ocaml.  Define the following functions.

    (a) [2pt]
        # map;;
        - : ('a -> 'b) -> 'a list -> 'b list = <fun>

    (b) [2pt]
        # filter;;
        - : ('a -> bool) -> 'a list -> 'a list = <fun>

    (c) [2pt]
        # fold_left;;
        - : ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a = <fun>



Question 2 on Multiple Choice part 1 on cmps112-2019q1-final.tt with accuracy 0.9090909090909091: 
    Perl.  What will print foo?
    (A) print "foo" if 0;
    (B) print "foo" if FALSE;
    (C) print "foo" if "";
    (D) print "foo" if undef;



Question 3 on Multiple Choice part 1 on cmps112-2019q1-final.tt with accuracy 0.8333333333333334: 
    Ocaml.  What kind of polymorphism is represented by:
    # List.length;;
    - : 'a list -> int = <fun>
    (A) conversion
    (B) inclusion
    (C) overloading
    (D) parametric



Question 7 on Multiple Choice part 1 on cmps112-2019q1-final.tt with accuracy 0.8627450980392157: 
    Smalltalk.  What is the order of evaluation of messages, listed in
    order with highest precedence at the left to lowest precedence at
    the right?
    (A) binary then keyword then unary
    (B) binary then unary then keyword
    (C) keyword then binary then unary
    (D) keyword then unary then binary
    (E) unary then binary then keyword
    (F) unary then keyword then binary



Question 9 on Multiple Choice part 1 on cmps112-2019q1-final.tt with accuracy 0.8: 
    Java.  What kind of polymorphism is this?
    interface foo {
       void bar (int x);
       void bar (String x);
    }
    (A) conversion
    (B) inclusion
    (C) overloading
    (D) parametric



Question 10 on Multiple Choice part 1 on cmps112-2019q1-final.tt with accuracy 0.8888888888888888: 
    Bash.  What will run the program foo, redirect both its stdout and
    stderr to the file bar?
    (A) foo <bar 1>&2
    (B) foo <bar 2>&1
    (C) foo >bar 1>&2
    (D) foo >bar 2>&1



Question 3 on Multiple Choice part 2 on cmps112-2019q1-final.tt with accuracy 0.7241379310344828: 
    Ocaml.  How much stack space is used by List.fold_left, where $n$
    is the length of the list argument?
    (A) $ O ( 1 ) $
    (B) $ O ( log sub 2 n ) $
    (C) $ O ( n ) $
    (D) $ O ( n log sub 2 n ) $



Question 4 on Multiple Choice part 2 on cmps112-2019q1-final.tt with accuracy 0.7241379310344828: 
    Ocaml.  How much stack space is used by List.fold_right, where $n$
    is the length of the list argument?
    (A) $ O ( 1 ) $
    (B) $ O ( log sub 2 n ) $
    (C) $ O ( n ) $
    (D) $ O ( n log sub 2 n ) $



Question 5 on Multiple Choice part 2 on cmps112-2019q1-final.tt with accuracy 1.0: 
    Ocaml.  List.map
    (A) ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a
    (B) ('a -> 'b -> 'b) -> 'a list -> 'b -> 'b
    (C) ('a -> 'b) -> 'a list -> 'b list
    (D) ('a -> bool) -> 'a list -> 'a list



Question 8 on Multiple Choice part 2 on cmps112-2019q1-final.tt with accuracy 0.7272727272727273: 
    Perl.  What is used to extract an element using $key from a hash
    %hash?
    (A) %hash[$key]
    (B) %hash{$key}
    (C) $hash[$key]
    (D) $hash{$key}



Question 10 on Multiple Choice part 2 on cmps112-2019q1-final.tt with accuracy 0.75: 
    Ocaml.  What is an int list?
    (A) (1,2,3,4)
    (B) (1;2;3;4)
    (C) [1,2,3,4]
    (D) [1;2;3;4]



